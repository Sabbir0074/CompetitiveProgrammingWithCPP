That's a great decision! Learning algorithms is crucial for improving in competitive programming (CP). Here’s a list of important algorithms commonly used in CP problems:

### **1. Searching Algorithms**
- Binary Search  // done
- Ternary Search  // done
- Exponential Search  // done

### **2. Sorting Algorithms**
- QuickSort  // done
- MergeSort  // done
- HeapSort
- Counting Sort
- Radix Sort
- Bucket Sort

### **3. Number Theory**
- Sieve of Eratosthenes (for prime numbers)
- Euclidean Algorithm (GCD)
- Extended Euclidean Algorithm
- Modular Arithmetic (Modular Inverse, Fast Exponentiation)
- Chinese Remainder Theorem
- Fermat’s Theorem and Euler’s Totient Function

### **4. Greedy Algorithms**
- Activity Selection Problem
- Huffman Encoding
- Kruskal’s Algorithm (for Minimum Spanning Tree)
- Prim’s Algorithm (for Minimum Spanning Tree)
- Dijkstra’s Algorithm (for Shortest Path)

### **5. Dynamic Programming (DP)**
- Fibonacci Sequence (Bottom-Up and Top-Down)
- 0/1 Knapsack Problem
- Unbounded Knapsack
- Longest Common Subsequence (LCS)
- Longest Increasing Subsequence (LIS)
- Matrix Chain Multiplication
- Edit Distance
- Subset Sum Problem
- Coin Change Problem
- DP on Trees
- DP on Graphs

### **6. Graph Algorithms**
- Breadth-First Search (BFS)
- Depth-First Search (DFS)
- Topological Sorting (Kahn’s Algorithm, DFS)
- Dijkstra’s Algorithm (Shortest Path)
- Bellman-Ford Algorithm
- Floyd-Warshall Algorithm
- Strongly Connected Components (Tarjan’s and Kosaraju’s Algorithm)
- Bipartite Graph Check (BFS/DFS)
- Bridges and Articulation Points (Tarjan’s Algorithm)

### **7. String Algorithms**
- KMP (Knuth-Morris-Pratt) Algorithm
- Rabin-Karp Algorithm
- Z Algorithm
- Aho-Corasick Algorithm (for multiple pattern matching)
- Suffix Array
- Suffix Tree
- Trie Data Structure

### **8. Tree Algorithms**
- Lowest Common Ancestor (LCA)
- Binary Indexed Tree (Fenwick Tree)
- Segment Tree
- Heavy-Light Decomposition
- Persistent Segment Tree

### **9. Bit Manipulation**
- Checking if a number is a power of 2
- Counting set bits (Brian Kernighan’s Algorithm)
- XOR properties and tricks
- Bitmask DP

### **10. Computational Geometry**
- Convex Hull (Graham’s Scan, Jarvis March)
- Line Intersection
- Closest Pair of Points
- Rotating Calipers

### **11. Advanced Topics**
- Mo’s Algorithm (for answering range queries efficiently)
- Disjoint Set Union (DSU) / Union-Find (with path compression)
- Square Root Decomposition
- Euler Tour Technique
- Heavy-Light Decomposition

If you focus on these algorithms and practice problems related to them, your CP rating will improve significantly. Start with sorting and searching, then move on to graph and DP problems.

Would you like a structured roadmap or resources to study these algorithms?
